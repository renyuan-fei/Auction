services:
  auctionservice:
    image: auctionservice
    build:
      context: .
      dockerfile: src/AuctionService/Dockerfile
    depends_on:
      - postgres
    environment:
      - ConnectionString_DefaultConnection=Server=postgres;Port=5432;Database=auction;User Id=postgres;Password=postgrespw;
      - ASPNETCORE_ENVIRONMENT=Development
    ports: # 端口映射
      - "443:7240"
  searchService:
    image: searchservice
    build:
      context: .
      dockerfile: src/SearchService/Dockerfile
    depends_on:
      - mongodb
      - auctionservice
      - rabbitmq
    environment:
      - ConnectionStrings_MongoDbConnection=mongodb://root:mongopw@mongodb:27017?connect=replicaSet
      - AuctionServiceUrl=http://auctionservice:80
      - ASPNETCORE_ENVIRONMENT=Development
  identityService:
    image: identityservice
    build:
      context: .
      dockerfile: src/IdentityService/Dockerfile
    depends_on:
      - postgres
    environment:
#      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionString_DefaultConnection=Server=postgres;Port=5432;Database=identity;User Id=postgres;Password=postgrespw;
  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      - POSTGRES_PASSWORD=postgrespw
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgres
  mongodb:
    container_name: mongo_container
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=mongopw
    ports:
      - 27017:27017
    volumes:
      - mongodata:/var/lib/mongodb/data
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
volumes:
  pgdata:
  mongodata:
